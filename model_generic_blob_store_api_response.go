/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.81.1-01.

API version: 3.81.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
)

// checks if the GenericBlobStoreApiResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericBlobStoreApiResponse{}

// GenericBlobStoreApiResponse struct for GenericBlobStoreApiResponse
type GenericBlobStoreApiResponse struct {
	AvailableSpaceInBytes *int64 `json:"availableSpaceInBytes,omitempty"`
	BlobCount *int64 `json:"blobCount,omitempty"`
	Name *string `json:"name,omitempty"`
	SoftQuota *BlobStoreApiSoftQuota `json:"softQuota,omitempty"`
	TotalSizeInBytes *int64 `json:"totalSizeInBytes,omitempty"`
	Type *string `json:"type,omitempty"`
	Unavailable *bool `json:"unavailable,omitempty"`
}

// NewGenericBlobStoreApiResponse instantiates a new GenericBlobStoreApiResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericBlobStoreApiResponse() *GenericBlobStoreApiResponse {
	this := GenericBlobStoreApiResponse{}
	return &this
}

// NewGenericBlobStoreApiResponseWithDefaults instantiates a new GenericBlobStoreApiResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericBlobStoreApiResponseWithDefaults() *GenericBlobStoreApiResponse {
	this := GenericBlobStoreApiResponse{}
	return &this
}

// GetAvailableSpaceInBytes returns the AvailableSpaceInBytes field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetAvailableSpaceInBytes() int64 {
	if o == nil || IsNil(o.AvailableSpaceInBytes) {
		var ret int64
		return ret
	}
	return *o.AvailableSpaceInBytes
}

// GetAvailableSpaceInBytesOk returns a tuple with the AvailableSpaceInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetAvailableSpaceInBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.AvailableSpaceInBytes) {
		return nil, false
	}
	return o.AvailableSpaceInBytes, true
}

// HasAvailableSpaceInBytes returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasAvailableSpaceInBytes() bool {
	if o != nil && !IsNil(o.AvailableSpaceInBytes) {
		return true
	}

	return false
}

// SetAvailableSpaceInBytes gets a reference to the given int64 and assigns it to the AvailableSpaceInBytes field.
func (o *GenericBlobStoreApiResponse) SetAvailableSpaceInBytes(v int64) {
	o.AvailableSpaceInBytes = &v
}

// GetBlobCount returns the BlobCount field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetBlobCount() int64 {
	if o == nil || IsNil(o.BlobCount) {
		var ret int64
		return ret
	}
	return *o.BlobCount
}

// GetBlobCountOk returns a tuple with the BlobCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetBlobCountOk() (*int64, bool) {
	if o == nil || IsNil(o.BlobCount) {
		return nil, false
	}
	return o.BlobCount, true
}

// HasBlobCount returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasBlobCount() bool {
	if o != nil && !IsNil(o.BlobCount) {
		return true
	}

	return false
}

// SetBlobCount gets a reference to the given int64 and assigns it to the BlobCount field.
func (o *GenericBlobStoreApiResponse) SetBlobCount(v int64) {
	o.BlobCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GenericBlobStoreApiResponse) SetName(v string) {
	o.Name = &v
}

// GetSoftQuota returns the SoftQuota field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetSoftQuota() BlobStoreApiSoftQuota {
	if o == nil || IsNil(o.SoftQuota) {
		var ret BlobStoreApiSoftQuota
		return ret
	}
	return *o.SoftQuota
}

// GetSoftQuotaOk returns a tuple with the SoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetSoftQuotaOk() (*BlobStoreApiSoftQuota, bool) {
	if o == nil || IsNil(o.SoftQuota) {
		return nil, false
	}
	return o.SoftQuota, true
}

// HasSoftQuota returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasSoftQuota() bool {
	if o != nil && !IsNil(o.SoftQuota) {
		return true
	}

	return false
}

// SetSoftQuota gets a reference to the given BlobStoreApiSoftQuota and assigns it to the SoftQuota field.
func (o *GenericBlobStoreApiResponse) SetSoftQuota(v BlobStoreApiSoftQuota) {
	o.SoftQuota = &v
}

// GetTotalSizeInBytes returns the TotalSizeInBytes field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetTotalSizeInBytes() int64 {
	if o == nil || IsNil(o.TotalSizeInBytes) {
		var ret int64
		return ret
	}
	return *o.TotalSizeInBytes
}

// GetTotalSizeInBytesOk returns a tuple with the TotalSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetTotalSizeInBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSizeInBytes) {
		return nil, false
	}
	return o.TotalSizeInBytes, true
}

// HasTotalSizeInBytes returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasTotalSizeInBytes() bool {
	if o != nil && !IsNil(o.TotalSizeInBytes) {
		return true
	}

	return false
}

// SetTotalSizeInBytes gets a reference to the given int64 and assigns it to the TotalSizeInBytes field.
func (o *GenericBlobStoreApiResponse) SetTotalSizeInBytes(v int64) {
	o.TotalSizeInBytes = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GenericBlobStoreApiResponse) SetType(v string) {
	o.Type = &v
}

// GetUnavailable returns the Unavailable field value if set, zero value otherwise.
func (o *GenericBlobStoreApiResponse) GetUnavailable() bool {
	if o == nil || IsNil(o.Unavailable) {
		var ret bool
		return ret
	}
	return *o.Unavailable
}

// GetUnavailableOk returns a tuple with the Unavailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericBlobStoreApiResponse) GetUnavailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Unavailable) {
		return nil, false
	}
	return o.Unavailable, true
}

// HasUnavailable returns a boolean if a field has been set.
func (o *GenericBlobStoreApiResponse) HasUnavailable() bool {
	if o != nil && !IsNil(o.Unavailable) {
		return true
	}

	return false
}

// SetUnavailable gets a reference to the given bool and assigns it to the Unavailable field.
func (o *GenericBlobStoreApiResponse) SetUnavailable(v bool) {
	o.Unavailable = &v
}

func (o GenericBlobStoreApiResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericBlobStoreApiResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableSpaceInBytes) {
		toSerialize["availableSpaceInBytes"] = o.AvailableSpaceInBytes
	}
	if !IsNil(o.BlobCount) {
		toSerialize["blobCount"] = o.BlobCount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SoftQuota) {
		toSerialize["softQuota"] = o.SoftQuota
	}
	if !IsNil(o.TotalSizeInBytes) {
		toSerialize["totalSizeInBytes"] = o.TotalSizeInBytes
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Unavailable) {
		toSerialize["unavailable"] = o.Unavailable
	}
	return toSerialize, nil
}

type NullableGenericBlobStoreApiResponse struct {
	value *GenericBlobStoreApiResponse
	isSet bool
}

func (v NullableGenericBlobStoreApiResponse) Get() *GenericBlobStoreApiResponse {
	return v.value
}

func (v *NullableGenericBlobStoreApiResponse) Set(val *GenericBlobStoreApiResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericBlobStoreApiResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericBlobStoreApiResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericBlobStoreApiResponse(val *GenericBlobStoreApiResponse) *NullableGenericBlobStoreApiResponse {
	return &NullableGenericBlobStoreApiResponse{value: val, isSet: true}
}

func (v NullableGenericBlobStoreApiResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericBlobStoreApiResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


