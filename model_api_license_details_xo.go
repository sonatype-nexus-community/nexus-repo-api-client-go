/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.82.0-08.

API version: 3.82.0-08
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"time"
)

// checks if the ApiLicenseDetailsXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiLicenseDetailsXO{}

// ApiLicenseDetailsXO struct for ApiLicenseDetailsXO
type ApiLicenseDetailsXO struct {
	ContactCompany *string `json:"contactCompany,omitempty"`
	ContactEmail *string `json:"contactEmail,omitempty"`
	ContactName *string `json:"contactName,omitempty"`
	EffectiveDate *time.Time `json:"effectiveDate,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	Features *string `json:"features,omitempty"`
	Fingerprint *string `json:"fingerprint,omitempty"`
	LicenseType *string `json:"licenseType,omitempty"`
	LicensedUsers *string `json:"licensedUsers,omitempty"`
	MaxRepoComponents *int64 `json:"maxRepoComponents,omitempty"`
	MaxRepoRequests *int64 `json:"maxRepoRequests,omitempty"`
}

// NewApiLicenseDetailsXO instantiates a new ApiLicenseDetailsXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLicenseDetailsXO() *ApiLicenseDetailsXO {
	this := ApiLicenseDetailsXO{}
	return &this
}

// NewApiLicenseDetailsXOWithDefaults instantiates a new ApiLicenseDetailsXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLicenseDetailsXOWithDefaults() *ApiLicenseDetailsXO {
	this := ApiLicenseDetailsXO{}
	return &this
}

// GetContactCompany returns the ContactCompany field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetContactCompany() string {
	if o == nil || IsNil(o.ContactCompany) {
		var ret string
		return ret
	}
	return *o.ContactCompany
}

// GetContactCompanyOk returns a tuple with the ContactCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetContactCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.ContactCompany) {
		return nil, false
	}
	return o.ContactCompany, true
}

// HasContactCompany returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasContactCompany() bool {
	if o != nil && !IsNil(o.ContactCompany) {
		return true
	}

	return false
}

// SetContactCompany gets a reference to the given string and assigns it to the ContactCompany field.
func (o *ApiLicenseDetailsXO) SetContactCompany(v string) {
	o.ContactCompany = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *ApiLicenseDetailsXO) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *ApiLicenseDetailsXO) SetContactName(v string) {
	o.ContactName = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *ApiLicenseDetailsXO) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *ApiLicenseDetailsXO) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetFeatures() string {
	if o == nil || IsNil(o.Features) {
		var ret string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given string and assigns it to the Features field.
func (o *ApiLicenseDetailsXO) SetFeatures(v string) {
	o.Features = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *ApiLicenseDetailsXO) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType) {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetLicenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *ApiLicenseDetailsXO) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetLicensedUsers returns the LicensedUsers field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetLicensedUsers() string {
	if o == nil || IsNil(o.LicensedUsers) {
		var ret string
		return ret
	}
	return *o.LicensedUsers
}

// GetLicensedUsersOk returns a tuple with the LicensedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetLicensedUsersOk() (*string, bool) {
	if o == nil || IsNil(o.LicensedUsers) {
		return nil, false
	}
	return o.LicensedUsers, true
}

// HasLicensedUsers returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasLicensedUsers() bool {
	if o != nil && !IsNil(o.LicensedUsers) {
		return true
	}

	return false
}

// SetLicensedUsers gets a reference to the given string and assigns it to the LicensedUsers field.
func (o *ApiLicenseDetailsXO) SetLicensedUsers(v string) {
	o.LicensedUsers = &v
}

// GetMaxRepoComponents returns the MaxRepoComponents field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetMaxRepoComponents() int64 {
	if o == nil || IsNil(o.MaxRepoComponents) {
		var ret int64
		return ret
	}
	return *o.MaxRepoComponents
}

// GetMaxRepoComponentsOk returns a tuple with the MaxRepoComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetMaxRepoComponentsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxRepoComponents) {
		return nil, false
	}
	return o.MaxRepoComponents, true
}

// HasMaxRepoComponents returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasMaxRepoComponents() bool {
	if o != nil && !IsNil(o.MaxRepoComponents) {
		return true
	}

	return false
}

// SetMaxRepoComponents gets a reference to the given int64 and assigns it to the MaxRepoComponents field.
func (o *ApiLicenseDetailsXO) SetMaxRepoComponents(v int64) {
	o.MaxRepoComponents = &v
}

// GetMaxRepoRequests returns the MaxRepoRequests field value if set, zero value otherwise.
func (o *ApiLicenseDetailsXO) GetMaxRepoRequests() int64 {
	if o == nil || IsNil(o.MaxRepoRequests) {
		var ret int64
		return ret
	}
	return *o.MaxRepoRequests
}

// GetMaxRepoRequestsOk returns a tuple with the MaxRepoRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseDetailsXO) GetMaxRepoRequestsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxRepoRequests) {
		return nil, false
	}
	return o.MaxRepoRequests, true
}

// HasMaxRepoRequests returns a boolean if a field has been set.
func (o *ApiLicenseDetailsXO) HasMaxRepoRequests() bool {
	if o != nil && !IsNil(o.MaxRepoRequests) {
		return true
	}

	return false
}

// SetMaxRepoRequests gets a reference to the given int64 and assigns it to the MaxRepoRequests field.
func (o *ApiLicenseDetailsXO) SetMaxRepoRequests(v int64) {
	o.MaxRepoRequests = &v
}

func (o ApiLicenseDetailsXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiLicenseDetailsXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactCompany) {
		toSerialize["contactCompany"] = o.ContactCompany
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.ContactName) {
		toSerialize["contactName"] = o.ContactName
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.LicensedUsers) {
		toSerialize["licensedUsers"] = o.LicensedUsers
	}
	if !IsNil(o.MaxRepoComponents) {
		toSerialize["maxRepoComponents"] = o.MaxRepoComponents
	}
	if !IsNil(o.MaxRepoRequests) {
		toSerialize["maxRepoRequests"] = o.MaxRepoRequests
	}
	return toSerialize, nil
}

type NullableApiLicenseDetailsXO struct {
	value *ApiLicenseDetailsXO
	isSet bool
}

func (v NullableApiLicenseDetailsXO) Get() *ApiLicenseDetailsXO {
	return v.value
}

func (v *NullableApiLicenseDetailsXO) Set(val *ApiLicenseDetailsXO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLicenseDetailsXO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLicenseDetailsXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLicenseDetailsXO(val *ApiLicenseDetailsXO) *NullableApiLicenseDetailsXO {
	return &NullableApiLicenseDetailsXO{value: val, isSet: true}
}

func (v NullableApiLicenseDetailsXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLicenseDetailsXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


