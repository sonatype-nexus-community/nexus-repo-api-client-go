/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.74.0-05.

API version: 3.74.0-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
)

// checks if the FileBlobStoreApiUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileBlobStoreApiUpdateRequest{}

// FileBlobStoreApiUpdateRequest struct for FileBlobStoreApiUpdateRequest
type FileBlobStoreApiUpdateRequest struct {
	// The path to the blobstore contents. This can be an absolute path to anywhere on the system Nexus Repository Manager has access to or it can be a path relative to the sonatype-work directory.
	Path *string `json:"path,omitempty"`
	SoftQuota *BlobStoreApiSoftQuota `json:"softQuota,omitempty"`
}

// NewFileBlobStoreApiUpdateRequest instantiates a new FileBlobStoreApiUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileBlobStoreApiUpdateRequest() *FileBlobStoreApiUpdateRequest {
	this := FileBlobStoreApiUpdateRequest{}
	return &this
}

// NewFileBlobStoreApiUpdateRequestWithDefaults instantiates a new FileBlobStoreApiUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileBlobStoreApiUpdateRequestWithDefaults() *FileBlobStoreApiUpdateRequest {
	this := FileBlobStoreApiUpdateRequest{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *FileBlobStoreApiUpdateRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileBlobStoreApiUpdateRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *FileBlobStoreApiUpdateRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *FileBlobStoreApiUpdateRequest) SetPath(v string) {
	o.Path = &v
}

// GetSoftQuota returns the SoftQuota field value if set, zero value otherwise.
func (o *FileBlobStoreApiUpdateRequest) GetSoftQuota() BlobStoreApiSoftQuota {
	if o == nil || IsNil(o.SoftQuota) {
		var ret BlobStoreApiSoftQuota
		return ret
	}
	return *o.SoftQuota
}

// GetSoftQuotaOk returns a tuple with the SoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileBlobStoreApiUpdateRequest) GetSoftQuotaOk() (*BlobStoreApiSoftQuota, bool) {
	if o == nil || IsNil(o.SoftQuota) {
		return nil, false
	}
	return o.SoftQuota, true
}

// HasSoftQuota returns a boolean if a field has been set.
func (o *FileBlobStoreApiUpdateRequest) HasSoftQuota() bool {
	if o != nil && !IsNil(o.SoftQuota) {
		return true
	}

	return false
}

// SetSoftQuota gets a reference to the given BlobStoreApiSoftQuota and assigns it to the SoftQuota field.
func (o *FileBlobStoreApiUpdateRequest) SetSoftQuota(v BlobStoreApiSoftQuota) {
	o.SoftQuota = &v
}

func (o FileBlobStoreApiUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileBlobStoreApiUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.SoftQuota) {
		toSerialize["softQuota"] = o.SoftQuota
	}
	return toSerialize, nil
}

type NullableFileBlobStoreApiUpdateRequest struct {
	value *FileBlobStoreApiUpdateRequest
	isSet bool
}

func (v NullableFileBlobStoreApiUpdateRequest) Get() *FileBlobStoreApiUpdateRequest {
	return v.value
}

func (v *NullableFileBlobStoreApiUpdateRequest) Set(val *FileBlobStoreApiUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileBlobStoreApiUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileBlobStoreApiUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileBlobStoreApiUpdateRequest(val *FileBlobStoreApiUpdateRequest) *NullableFileBlobStoreApiUpdateRequest {
	return &NullableFileBlobStoreApiUpdateRequest{value: val, isSet: true}
}

func (v NullableFileBlobStoreApiUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileBlobStoreApiUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


