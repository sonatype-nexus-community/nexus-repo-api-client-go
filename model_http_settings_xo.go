/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.82.0-08.

API version: 3.82.0-08
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HttpSettingsXo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpSettingsXo{}

// HttpSettingsXo struct for HttpSettingsXo
type HttpSettingsXo struct {
	HttpProxy ProxySettingsXo `json:"httpProxy"`
	HttpsProxy ProxySettingsXo `json:"httpsProxy"`
	NonProxyHosts []string `json:"nonProxyHosts,omitempty"`
	// Connection/Socket Retry Attempts
	Retries int32 `json:"retries"`
	// Connection/Socket Timeout
	Timeout int32 `json:"timeout"`
	// User-Agent Customization
	UserAgent string `json:"userAgent"`
}

type _HttpSettingsXo HttpSettingsXo

// NewHttpSettingsXo instantiates a new HttpSettingsXo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpSettingsXo(httpProxy ProxySettingsXo, httpsProxy ProxySettingsXo, retries int32, timeout int32, userAgent string) *HttpSettingsXo {
	this := HttpSettingsXo{}
	this.HttpProxy = httpProxy
	this.HttpsProxy = httpsProxy
	this.Retries = retries
	this.Timeout = timeout
	this.UserAgent = userAgent
	return &this
}

// NewHttpSettingsXoWithDefaults instantiates a new HttpSettingsXo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpSettingsXoWithDefaults() *HttpSettingsXo {
	this := HttpSettingsXo{}
	return &this
}

// GetHttpProxy returns the HttpProxy field value
func (o *HttpSettingsXo) GetHttpProxy() ProxySettingsXo {
	if o == nil {
		var ret ProxySettingsXo
		return ret
	}

	return o.HttpProxy
}

// GetHttpProxyOk returns a tuple with the HttpProxy field value
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetHttpProxyOk() (*ProxySettingsXo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpProxy, true
}

// SetHttpProxy sets field value
func (o *HttpSettingsXo) SetHttpProxy(v ProxySettingsXo) {
	o.HttpProxy = v
}

// GetHttpsProxy returns the HttpsProxy field value
func (o *HttpSettingsXo) GetHttpsProxy() ProxySettingsXo {
	if o == nil {
		var ret ProxySettingsXo
		return ret
	}

	return o.HttpsProxy
}

// GetHttpsProxyOk returns a tuple with the HttpsProxy field value
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetHttpsProxyOk() (*ProxySettingsXo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpsProxy, true
}

// SetHttpsProxy sets field value
func (o *HttpSettingsXo) SetHttpsProxy(v ProxySettingsXo) {
	o.HttpsProxy = v
}

// GetNonProxyHosts returns the NonProxyHosts field value if set, zero value otherwise.
func (o *HttpSettingsXo) GetNonProxyHosts() []string {
	if o == nil || IsNil(o.NonProxyHosts) {
		var ret []string
		return ret
	}
	return o.NonProxyHosts
}

// GetNonProxyHostsOk returns a tuple with the NonProxyHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetNonProxyHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.NonProxyHosts) {
		return nil, false
	}
	return o.NonProxyHosts, true
}

// HasNonProxyHosts returns a boolean if a field has been set.
func (o *HttpSettingsXo) HasNonProxyHosts() bool {
	if o != nil && !IsNil(o.NonProxyHosts) {
		return true
	}

	return false
}

// SetNonProxyHosts gets a reference to the given []string and assigns it to the NonProxyHosts field.
func (o *HttpSettingsXo) SetNonProxyHosts(v []string) {
	o.NonProxyHosts = v
}

// GetRetries returns the Retries field value
func (o *HttpSettingsXo) GetRetries() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetRetriesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Retries, true
}

// SetRetries sets field value
func (o *HttpSettingsXo) SetRetries(v int32) {
	o.Retries = v
}

// GetTimeout returns the Timeout field value
func (o *HttpSettingsXo) GetTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *HttpSettingsXo) SetTimeout(v int32) {
	o.Timeout = v
}

// GetUserAgent returns the UserAgent field value
func (o *HttpSettingsXo) GetUserAgent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *HttpSettingsXo) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAgent, true
}

// SetUserAgent sets field value
func (o *HttpSettingsXo) SetUserAgent(v string) {
	o.UserAgent = v
}

func (o HttpSettingsXo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpSettingsXo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["httpProxy"] = o.HttpProxy
	toSerialize["httpsProxy"] = o.HttpsProxy
	if !IsNil(o.NonProxyHosts) {
		toSerialize["nonProxyHosts"] = o.NonProxyHosts
	}
	toSerialize["retries"] = o.Retries
	toSerialize["timeout"] = o.Timeout
	toSerialize["userAgent"] = o.UserAgent
	return toSerialize, nil
}

func (o *HttpSettingsXo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"httpProxy",
		"httpsProxy",
		"retries",
		"timeout",
		"userAgent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHttpSettingsXo := _HttpSettingsXo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHttpSettingsXo)

	if err != nil {
		return err
	}

	*o = HttpSettingsXo(varHttpSettingsXo)

	return err
}

type NullableHttpSettingsXo struct {
	value *HttpSettingsXo
	isSet bool
}

func (v NullableHttpSettingsXo) Get() *HttpSettingsXo {
	return v.value
}

func (v *NullableHttpSettingsXo) Set(val *HttpSettingsXo) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpSettingsXo) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpSettingsXo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpSettingsXo(val *HttpSettingsXo) *NullableHttpSettingsXo {
	return &NullableHttpSettingsXo{value: val, isSet: true}
}

func (v NullableHttpSettingsXo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpSettingsXo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


