/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

API version: 3.85.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ReconcilePlanDetailsXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReconcilePlanDetailsXO{}

// ReconcilePlanDetailsXO struct for ReconcilePlanDetailsXO
type ReconcilePlanDetailsXO struct {
	Action *string `json:"action,omitempty"`
	AssetName *string `json:"assetName,omitempty"`
	BlobId *string `json:"blobId,omitempty"`
	DatePathRef *string `json:"datePathRef,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Path *string `json:"path,omitempty"`
	PlanId *int32 `json:"planId,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Repository *string `json:"repository,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewReconcilePlanDetailsXO instantiates a new ReconcilePlanDetailsXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReconcilePlanDetailsXO() *ReconcilePlanDetailsXO {
	this := ReconcilePlanDetailsXO{}
	return &this
}

// NewReconcilePlanDetailsXOWithDefaults instantiates a new ReconcilePlanDetailsXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReconcilePlanDetailsXOWithDefaults() *ReconcilePlanDetailsXO {
	this := ReconcilePlanDetailsXO{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ReconcilePlanDetailsXO) SetAction(v string) {
	o.Action = &v
}

// GetAssetName returns the AssetName field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetAssetName() string {
	if o == nil || IsNil(o.AssetName) {
		var ret string
		return ret
	}
	return *o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetAssetNameOk() (*string, bool) {
	if o == nil || IsNil(o.AssetName) {
		return nil, false
	}
	return o.AssetName, true
}

// HasAssetName returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasAssetName() bool {
	if o != nil && !IsNil(o.AssetName) {
		return true
	}

	return false
}

// SetAssetName gets a reference to the given string and assigns it to the AssetName field.
func (o *ReconcilePlanDetailsXO) SetAssetName(v string) {
	o.AssetName = &v
}

// GetBlobId returns the BlobId field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetBlobId() string {
	if o == nil || IsNil(o.BlobId) {
		var ret string
		return ret
	}
	return *o.BlobId
}

// GetBlobIdOk returns a tuple with the BlobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetBlobIdOk() (*string, bool) {
	if o == nil || IsNil(o.BlobId) {
		return nil, false
	}
	return o.BlobId, true
}

// HasBlobId returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasBlobId() bool {
	if o != nil && !IsNil(o.BlobId) {
		return true
	}

	return false
}

// SetBlobId gets a reference to the given string and assigns it to the BlobId field.
func (o *ReconcilePlanDetailsXO) SetBlobId(v string) {
	o.BlobId = &v
}

// GetDatePathRef returns the DatePathRef field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetDatePathRef() string {
	if o == nil || IsNil(o.DatePathRef) {
		var ret string
		return ret
	}
	return *o.DatePathRef
}

// GetDatePathRefOk returns a tuple with the DatePathRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetDatePathRefOk() (*string, bool) {
	if o == nil || IsNil(o.DatePathRef) {
		return nil, false
	}
	return o.DatePathRef, true
}

// HasDatePathRef returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasDatePathRef() bool {
	if o != nil && !IsNil(o.DatePathRef) {
		return true
	}

	return false
}

// SetDatePathRef gets a reference to the given string and assigns it to the DatePathRef field.
func (o *ReconcilePlanDetailsXO) SetDatePathRef(v string) {
	o.DatePathRef = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ReconcilePlanDetailsXO) SetId(v int32) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ReconcilePlanDetailsXO) SetPath(v string) {
	o.Path = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetPlanId() int32 {
	if o == nil || IsNil(o.PlanId) {
		var ret int32
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetPlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given int32 and assigns it to the PlanId field.
func (o *ReconcilePlanDetailsXO) SetPlanId(v int32) {
	o.PlanId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ReconcilePlanDetailsXO) SetReason(v string) {
	o.Reason = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetRepository() string {
	if o == nil || IsNil(o.Repository) {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *ReconcilePlanDetailsXO) SetRepository(v string) {
	o.Repository = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ReconcilePlanDetailsXO) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReconcilePlanDetailsXO) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ReconcilePlanDetailsXO) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ReconcilePlanDetailsXO) SetState(v string) {
	o.State = &v
}

func (o ReconcilePlanDetailsXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReconcilePlanDetailsXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.AssetName) {
		toSerialize["assetName"] = o.AssetName
	}
	if !IsNil(o.BlobId) {
		toSerialize["blobId"] = o.BlobId
	}
	if !IsNil(o.DatePathRef) {
		toSerialize["datePathRef"] = o.DatePathRef
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableReconcilePlanDetailsXO struct {
	value *ReconcilePlanDetailsXO
	isSet bool
}

func (v NullableReconcilePlanDetailsXO) Get() *ReconcilePlanDetailsXO {
	return v.value
}

func (v *NullableReconcilePlanDetailsXO) Set(val *ReconcilePlanDetailsXO) {
	v.value = val
	v.isSet = true
}

func (v NullableReconcilePlanDetailsXO) IsSet() bool {
	return v.isSet
}

func (v *NullableReconcilePlanDetailsXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReconcilePlanDetailsXO(val *ReconcilePlanDetailsXO) *NullableReconcilePlanDetailsXO {
	return &NullableReconcilePlanDetailsXO{value: val, isSet: true}
}

func (v NullableReconcilePlanDetailsXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReconcilePlanDetailsXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


