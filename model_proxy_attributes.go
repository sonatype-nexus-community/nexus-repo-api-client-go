/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.68.1-02.

API version: 3.68.1-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProxyAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProxyAttributes{}

// ProxyAttributes struct for ProxyAttributes
type ProxyAttributes struct {
	// How long to cache artifacts before rechecking the remote repository (in minutes)
	ContentMaxAge int32 `json:"contentMaxAge"`
	// How long to cache metadata before rechecking the remote repository (in minutes)
	MetadataMaxAge int32 `json:"metadataMaxAge"`
	// Location of the remote repository being proxied
	RemoteUrl *string `json:"remoteUrl,omitempty"`
}

type _ProxyAttributes ProxyAttributes

// NewProxyAttributes instantiates a new ProxyAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxyAttributes(contentMaxAge int32, metadataMaxAge int32) *ProxyAttributes {
	this := ProxyAttributes{}
	this.ContentMaxAge = contentMaxAge
	this.MetadataMaxAge = metadataMaxAge
	return &this
}

// NewProxyAttributesWithDefaults instantiates a new ProxyAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxyAttributesWithDefaults() *ProxyAttributes {
	this := ProxyAttributes{}
	return &this
}

// GetContentMaxAge returns the ContentMaxAge field value
func (o *ProxyAttributes) GetContentMaxAge() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContentMaxAge
}

// GetContentMaxAgeOk returns a tuple with the ContentMaxAge field value
// and a boolean to check if the value has been set.
func (o *ProxyAttributes) GetContentMaxAgeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentMaxAge, true
}

// SetContentMaxAge sets field value
func (o *ProxyAttributes) SetContentMaxAge(v int32) {
	o.ContentMaxAge = v
}

// GetMetadataMaxAge returns the MetadataMaxAge field value
func (o *ProxyAttributes) GetMetadataMaxAge() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MetadataMaxAge
}

// GetMetadataMaxAgeOk returns a tuple with the MetadataMaxAge field value
// and a boolean to check if the value has been set.
func (o *ProxyAttributes) GetMetadataMaxAgeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetadataMaxAge, true
}

// SetMetadataMaxAge sets field value
func (o *ProxyAttributes) SetMetadataMaxAge(v int32) {
	o.MetadataMaxAge = v
}

// GetRemoteUrl returns the RemoteUrl field value if set, zero value otherwise.
func (o *ProxyAttributes) GetRemoteUrl() string {
	if o == nil || IsNil(o.RemoteUrl) {
		var ret string
		return ret
	}
	return *o.RemoteUrl
}

// GetRemoteUrlOk returns a tuple with the RemoteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyAttributes) GetRemoteUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteUrl) {
		return nil, false
	}
	return o.RemoteUrl, true
}

// HasRemoteUrl returns a boolean if a field has been set.
func (o *ProxyAttributes) HasRemoteUrl() bool {
	if o != nil && !IsNil(o.RemoteUrl) {
		return true
	}

	return false
}

// SetRemoteUrl gets a reference to the given string and assigns it to the RemoteUrl field.
func (o *ProxyAttributes) SetRemoteUrl(v string) {
	o.RemoteUrl = &v
}

func (o ProxyAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProxyAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contentMaxAge"] = o.ContentMaxAge
	toSerialize["metadataMaxAge"] = o.MetadataMaxAge
	if !IsNil(o.RemoteUrl) {
		toSerialize["remoteUrl"] = o.RemoteUrl
	}
	return toSerialize, nil
}

func (o *ProxyAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contentMaxAge",
		"metadataMaxAge",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProxyAttributes := _ProxyAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProxyAttributes)

	if err != nil {
		return err
	}

	*o = ProxyAttributes(varProxyAttributes)

	return err
}

type NullableProxyAttributes struct {
	value *ProxyAttributes
	isSet bool
}

func (v NullableProxyAttributes) Get() *ProxyAttributes {
	return v.value
}

func (v *NullableProxyAttributes) Set(val *ProxyAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyAttributes(val *ProxyAttributes) *NullableProxyAttributes {
	return &NullableProxyAttributes{value: val, isSet: true}
}

func (v NullableProxyAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


