/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

API version: 3.85.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the InstanceConfigurationXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceConfigurationXO{}

// InstanceConfigurationXO struct for InstanceConfigurationXO
type InstanceConfigurationXO struct {
	ConfigurationXOs []ConfigurationXO `json:"configurationXOs,omitempty"`
}

// NewInstanceConfigurationXO instantiates a new InstanceConfigurationXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceConfigurationXO() *InstanceConfigurationXO {
	this := InstanceConfigurationXO{}
	return &this
}

// NewInstanceConfigurationXOWithDefaults instantiates a new InstanceConfigurationXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceConfigurationXOWithDefaults() *InstanceConfigurationXO {
	this := InstanceConfigurationXO{}
	return &this
}

// GetConfigurationXOs returns the ConfigurationXOs field value if set, zero value otherwise.
func (o *InstanceConfigurationXO) GetConfigurationXOs() []ConfigurationXO {
	if o == nil || IsNil(o.ConfigurationXOs) {
		var ret []ConfigurationXO
		return ret
	}
	return o.ConfigurationXOs
}

// GetConfigurationXOsOk returns a tuple with the ConfigurationXOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceConfigurationXO) GetConfigurationXOsOk() ([]ConfigurationXO, bool) {
	if o == nil || IsNil(o.ConfigurationXOs) {
		return nil, false
	}
	return o.ConfigurationXOs, true
}

// HasConfigurationXOs returns a boolean if a field has been set.
func (o *InstanceConfigurationXO) HasConfigurationXOs() bool {
	if o != nil && !IsNil(o.ConfigurationXOs) {
		return true
	}

	return false
}

// SetConfigurationXOs gets a reference to the given []ConfigurationXO and assigns it to the ConfigurationXOs field.
func (o *InstanceConfigurationXO) SetConfigurationXOs(v []ConfigurationXO) {
	o.ConfigurationXOs = v
}

func (o InstanceConfigurationXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceConfigurationXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationXOs) {
		toSerialize["configurationXOs"] = o.ConfigurationXOs
	}
	return toSerialize, nil
}

type NullableInstanceConfigurationXO struct {
	value *InstanceConfigurationXO
	isSet bool
}

func (v NullableInstanceConfigurationXO) Get() *InstanceConfigurationXO {
	return v.value
}

func (v *NullableInstanceConfigurationXO) Set(val *InstanceConfigurationXO) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceConfigurationXO) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceConfigurationXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceConfigurationXO(val *InstanceConfigurationXO) *NullableInstanceConfigurationXO {
	return &NullableInstanceConfigurationXO{value: val, isSet: true}
}

func (v NullableInstanceConfigurationXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceConfigurationXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


