/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.68.1-02.

API version: 3.68.1-02
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
	"time"
)

// checks if the AssetXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetXO{}

// AssetXO struct for AssetXO
type AssetXO struct {
	BlobCreated *time.Time `json:"blobCreated,omitempty"`
	Checksum map[string]map[string]interface{} `json:"checksum,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	DownloadUrl *string `json:"downloadUrl,omitempty"`
	FileSize *int64 `json:"fileSize,omitempty"`
	Format *string `json:"format,omitempty"`
	Id *string `json:"id,omitempty"`
	LastDownloaded *time.Time `json:"lastDownloaded,omitempty"`
	LastModified *time.Time `json:"lastModified,omitempty"`
	Path *string `json:"path,omitempty"`
	Repository *string `json:"repository,omitempty"`
	Uploader *string `json:"uploader,omitempty"`
	UploaderIp *string `json:"uploaderIp,omitempty"`
}

// NewAssetXO instantiates a new AssetXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetXO() *AssetXO {
	this := AssetXO{}
	return &this
}

// NewAssetXOWithDefaults instantiates a new AssetXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetXOWithDefaults() *AssetXO {
	this := AssetXO{}
	return &this
}

// GetBlobCreated returns the BlobCreated field value if set, zero value otherwise.
func (o *AssetXO) GetBlobCreated() time.Time {
	if o == nil || IsNil(o.BlobCreated) {
		var ret time.Time
		return ret
	}
	return *o.BlobCreated
}

// GetBlobCreatedOk returns a tuple with the BlobCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetBlobCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BlobCreated) {
		return nil, false
	}
	return o.BlobCreated, true
}

// HasBlobCreated returns a boolean if a field has been set.
func (o *AssetXO) HasBlobCreated() bool {
	if o != nil && !IsNil(o.BlobCreated) {
		return true
	}

	return false
}

// SetBlobCreated gets a reference to the given time.Time and assigns it to the BlobCreated field.
func (o *AssetXO) SetBlobCreated(v time.Time) {
	o.BlobCreated = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *AssetXO) GetChecksum() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Checksum) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetChecksumOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Checksum) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *AssetXO) HasChecksum() bool {
	if o != nil && !IsNil(o.Checksum) {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given map[string]map[string]interface{} and assigns it to the Checksum field.
func (o *AssetXO) SetChecksum(v map[string]map[string]interface{}) {
	o.Checksum = v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *AssetXO) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *AssetXO) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *AssetXO) SetContentType(v string) {
	o.ContentType = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *AssetXO) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *AssetXO) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *AssetXO) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *AssetXO) GetFileSize() int64 {
	if o == nil || IsNil(o.FileSize) {
		var ret int64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetFileSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *AssetXO) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int64 and assigns it to the FileSize field.
func (o *AssetXO) SetFileSize(v int64) {
	o.FileSize = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *AssetXO) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *AssetXO) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *AssetXO) SetFormat(v string) {
	o.Format = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssetXO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssetXO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AssetXO) SetId(v string) {
	o.Id = &v
}

// GetLastDownloaded returns the LastDownloaded field value if set, zero value otherwise.
func (o *AssetXO) GetLastDownloaded() time.Time {
	if o == nil || IsNil(o.LastDownloaded) {
		var ret time.Time
		return ret
	}
	return *o.LastDownloaded
}

// GetLastDownloadedOk returns a tuple with the LastDownloaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetLastDownloadedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastDownloaded) {
		return nil, false
	}
	return o.LastDownloaded, true
}

// HasLastDownloaded returns a boolean if a field has been set.
func (o *AssetXO) HasLastDownloaded() bool {
	if o != nil && !IsNil(o.LastDownloaded) {
		return true
	}

	return false
}

// SetLastDownloaded gets a reference to the given time.Time and assigns it to the LastDownloaded field.
func (o *AssetXO) SetLastDownloaded(v time.Time) {
	o.LastDownloaded = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AssetXO) GetLastModified() time.Time {
	if o == nil || IsNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AssetXO) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *AssetXO) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *AssetXO) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *AssetXO) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *AssetXO) SetPath(v string) {
	o.Path = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *AssetXO) GetRepository() string {
	if o == nil || IsNil(o.Repository) {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *AssetXO) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *AssetXO) SetRepository(v string) {
	o.Repository = &v
}

// GetUploader returns the Uploader field value if set, zero value otherwise.
func (o *AssetXO) GetUploader() string {
	if o == nil || IsNil(o.Uploader) {
		var ret string
		return ret
	}
	return *o.Uploader
}

// GetUploaderOk returns a tuple with the Uploader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetUploaderOk() (*string, bool) {
	if o == nil || IsNil(o.Uploader) {
		return nil, false
	}
	return o.Uploader, true
}

// HasUploader returns a boolean if a field has been set.
func (o *AssetXO) HasUploader() bool {
	if o != nil && !IsNil(o.Uploader) {
		return true
	}

	return false
}

// SetUploader gets a reference to the given string and assigns it to the Uploader field.
func (o *AssetXO) SetUploader(v string) {
	o.Uploader = &v
}

// GetUploaderIp returns the UploaderIp field value if set, zero value otherwise.
func (o *AssetXO) GetUploaderIp() string {
	if o == nil || IsNil(o.UploaderIp) {
		var ret string
		return ret
	}
	return *o.UploaderIp
}

// GetUploaderIpOk returns a tuple with the UploaderIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetXO) GetUploaderIpOk() (*string, bool) {
	if o == nil || IsNil(o.UploaderIp) {
		return nil, false
	}
	return o.UploaderIp, true
}

// HasUploaderIp returns a boolean if a field has been set.
func (o *AssetXO) HasUploaderIp() bool {
	if o != nil && !IsNil(o.UploaderIp) {
		return true
	}

	return false
}

// SetUploaderIp gets a reference to the given string and assigns it to the UploaderIp field.
func (o *AssetXO) SetUploaderIp(v string) {
	o.UploaderIp = &v
}

func (o AssetXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlobCreated) {
		toSerialize["blobCreated"] = o.BlobCreated
	}
	if !IsNil(o.Checksum) {
		toSerialize["checksum"] = o.Checksum
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["downloadUrl"] = o.DownloadUrl
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastDownloaded) {
		toSerialize["lastDownloaded"] = o.LastDownloaded
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.Uploader) {
		toSerialize["uploader"] = o.Uploader
	}
	if !IsNil(o.UploaderIp) {
		toSerialize["uploaderIp"] = o.UploaderIp
	}
	return toSerialize, nil
}

type NullableAssetXO struct {
	value *AssetXO
	isSet bool
}

func (v NullableAssetXO) Get() *AssetXO {
	return v.value
}

func (v *NullableAssetXO) Set(val *AssetXO) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetXO) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetXO(val *AssetXO) *NullableAssetXO {
	return &NullableAssetXO{value: val, isSet: true}
}

func (v NullableAssetXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


