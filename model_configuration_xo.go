/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

API version: 3.85.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ConfigurationXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationXO{}

// ConfigurationXO struct for ConfigurationXO
type ConfigurationXO struct {
	ConfigurationTypeId *string `json:"configurationTypeId,omitempty"`
}

// NewConfigurationXO instantiates a new ConfigurationXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationXO() *ConfigurationXO {
	this := ConfigurationXO{}
	return &this
}

// NewConfigurationXOWithDefaults instantiates a new ConfigurationXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationXOWithDefaults() *ConfigurationXO {
	this := ConfigurationXO{}
	return &this
}

// GetConfigurationTypeId returns the ConfigurationTypeId field value if set, zero value otherwise.
func (o *ConfigurationXO) GetConfigurationTypeId() string {
	if o == nil || IsNil(o.ConfigurationTypeId) {
		var ret string
		return ret
	}
	return *o.ConfigurationTypeId
}

// GetConfigurationTypeIdOk returns a tuple with the ConfigurationTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationXO) GetConfigurationTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationTypeId) {
		return nil, false
	}
	return o.ConfigurationTypeId, true
}

// HasConfigurationTypeId returns a boolean if a field has been set.
func (o *ConfigurationXO) HasConfigurationTypeId() bool {
	if o != nil && !IsNil(o.ConfigurationTypeId) {
		return true
	}

	return false
}

// SetConfigurationTypeId gets a reference to the given string and assigns it to the ConfigurationTypeId field.
func (o *ConfigurationXO) SetConfigurationTypeId(v string) {
	o.ConfigurationTypeId = &v
}

func (o ConfigurationXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationTypeId) {
		toSerialize["configurationTypeId"] = o.ConfigurationTypeId
	}
	return toSerialize, nil
}

type NullableConfigurationXO struct {
	value *ConfigurationXO
	isSet bool
}

func (v NullableConfigurationXO) Get() *ConfigurationXO {
	return v.value
}

func (v *NullableConfigurationXO) Set(val *ConfigurationXO) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationXO) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationXO(val *ConfigurationXO) *NullableConfigurationXO {
	return &NullableConfigurationXO{value: val, isSet: true}
}

func (v NullableConfigurationXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


