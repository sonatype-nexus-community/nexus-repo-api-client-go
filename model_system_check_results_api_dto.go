/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.74.0-05.

API version: 3.74.0-05
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
)

// checks if the SystemCheckResultsApiDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemCheckResultsApiDTO{}

// SystemCheckResultsApiDTO struct for SystemCheckResultsApiDTO
type SystemCheckResultsApiDTO struct {
	// The hostname of the originating node
	Hostname *string `json:"hostname,omitempty"`
	// A unique identifier for the node, should not be considered stable
	NodeId *string `json:"nodeId,omitempty"`
	// The system status check results
	Results *map[string]SystemCheckResultDTO `json:"results,omitempty"`
}

// NewSystemCheckResultsApiDTO instantiates a new SystemCheckResultsApiDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemCheckResultsApiDTO() *SystemCheckResultsApiDTO {
	this := SystemCheckResultsApiDTO{}
	return &this
}

// NewSystemCheckResultsApiDTOWithDefaults instantiates a new SystemCheckResultsApiDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemCheckResultsApiDTOWithDefaults() *SystemCheckResultsApiDTO {
	this := SystemCheckResultsApiDTO{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *SystemCheckResultsApiDTO) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCheckResultsApiDTO) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *SystemCheckResultsApiDTO) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *SystemCheckResultsApiDTO) SetHostname(v string) {
	o.Hostname = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *SystemCheckResultsApiDTO) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCheckResultsApiDTO) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *SystemCheckResultsApiDTO) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *SystemCheckResultsApiDTO) SetNodeId(v string) {
	o.NodeId = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *SystemCheckResultsApiDTO) GetResults() map[string]SystemCheckResultDTO {
	if o == nil || IsNil(o.Results) {
		var ret map[string]SystemCheckResultDTO
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemCheckResultsApiDTO) GetResultsOk() (*map[string]SystemCheckResultDTO, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *SystemCheckResultsApiDTO) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given map[string]SystemCheckResultDTO and assigns it to the Results field.
func (o *SystemCheckResultsApiDTO) SetResults(v map[string]SystemCheckResultDTO) {
	o.Results = &v
}

func (o SystemCheckResultsApiDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemCheckResultsApiDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableSystemCheckResultsApiDTO struct {
	value *SystemCheckResultsApiDTO
	isSet bool
}

func (v NullableSystemCheckResultsApiDTO) Get() *SystemCheckResultsApiDTO {
	return v.value
}

func (v *NullableSystemCheckResultsApiDTO) Set(val *SystemCheckResultsApiDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemCheckResultsApiDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemCheckResultsApiDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemCheckResultsApiDTO(val *SystemCheckResultsApiDTO) *NullableSystemCheckResultsApiDTO {
	return &NullableSystemCheckResultsApiDTO{value: val, isSet: true}
}

func (v NullableSystemCheckResultsApiDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemCheckResultsApiDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


