/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.84.0-03.

API version: 3.84.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ApiPrivilegeScriptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPrivilegeScriptRequest{}

// ApiPrivilegeScriptRequest struct for ApiPrivilegeScriptRequest
type ApiPrivilegeScriptRequest struct {
	// A collection of actions to associate with the privilege, using BREAD syntax (browse,read,edit,add,delete,all) as well as 'run' for script privileges.
	Actions []string `json:"actions,omitempty"`
	Description *string `json:"description,omitempty"`
	// The name of the privilege.  This value cannot be changed.
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-]{1}[a-zA-Z0-9_\\\\-\\\\.]*$"`
	// The name of a script to give access to.
	ScriptName *string `json:"scriptName,omitempty"`
}

// NewApiPrivilegeScriptRequest instantiates a new ApiPrivilegeScriptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPrivilegeScriptRequest() *ApiPrivilegeScriptRequest {
	this := ApiPrivilegeScriptRequest{}
	return &this
}

// NewApiPrivilegeScriptRequestWithDefaults instantiates a new ApiPrivilegeScriptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPrivilegeScriptRequestWithDefaults() *ApiPrivilegeScriptRequest {
	this := ApiPrivilegeScriptRequest{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ApiPrivilegeScriptRequest) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPrivilegeScriptRequest) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ApiPrivilegeScriptRequest) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *ApiPrivilegeScriptRequest) SetActions(v []string) {
	o.Actions = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiPrivilegeScriptRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPrivilegeScriptRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiPrivilegeScriptRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiPrivilegeScriptRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiPrivilegeScriptRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPrivilegeScriptRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiPrivilegeScriptRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiPrivilegeScriptRequest) SetName(v string) {
	o.Name = &v
}

// GetScriptName returns the ScriptName field value if set, zero value otherwise.
func (o *ApiPrivilegeScriptRequest) GetScriptName() string {
	if o == nil || IsNil(o.ScriptName) {
		var ret string
		return ret
	}
	return *o.ScriptName
}

// GetScriptNameOk returns a tuple with the ScriptName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPrivilegeScriptRequest) GetScriptNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScriptName) {
		return nil, false
	}
	return o.ScriptName, true
}

// HasScriptName returns a boolean if a field has been set.
func (o *ApiPrivilegeScriptRequest) HasScriptName() bool {
	if o != nil && !IsNil(o.ScriptName) {
		return true
	}

	return false
}

// SetScriptName gets a reference to the given string and assigns it to the ScriptName field.
func (o *ApiPrivilegeScriptRequest) SetScriptName(v string) {
	o.ScriptName = &v
}

func (o ApiPrivilegeScriptRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPrivilegeScriptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ScriptName) {
		toSerialize["scriptName"] = o.ScriptName
	}
	return toSerialize, nil
}

type NullableApiPrivilegeScriptRequest struct {
	value *ApiPrivilegeScriptRequest
	isSet bool
}

func (v NullableApiPrivilegeScriptRequest) Get() *ApiPrivilegeScriptRequest {
	return v.value
}

func (v *NullableApiPrivilegeScriptRequest) Set(val *ApiPrivilegeScriptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPrivilegeScriptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPrivilegeScriptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPrivilegeScriptRequest(val *ApiPrivilegeScriptRequest) *NullableApiPrivilegeScriptRequest {
	return &NullableApiPrivilegeScriptRequest{value: val, isSet: true}
}

func (v NullableApiPrivilegeScriptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPrivilegeScriptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


