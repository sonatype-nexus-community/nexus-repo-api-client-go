/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.84.0-03.

API version: 3.84.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ApiKeysReEncryptionRequestApiXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeysReEncryptionRequestApiXO{}

// ApiKeysReEncryptionRequestApiXO struct for ApiKeysReEncryptionRequestApiXO
type ApiKeysReEncryptionRequestApiXO struct {
	// Optional - The algorithm to be used to decrypt the principals
	AlgorithmForDecryption *string `json:"algorithmForDecryption,omitempty"`
	// Optional - Email to notify when task finishes
	NotifyEmail *string `json:"notifyEmail,omitempty"`
}

// NewApiKeysReEncryptionRequestApiXO instantiates a new ApiKeysReEncryptionRequestApiXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeysReEncryptionRequestApiXO() *ApiKeysReEncryptionRequestApiXO {
	this := ApiKeysReEncryptionRequestApiXO{}
	return &this
}

// NewApiKeysReEncryptionRequestApiXOWithDefaults instantiates a new ApiKeysReEncryptionRequestApiXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeysReEncryptionRequestApiXOWithDefaults() *ApiKeysReEncryptionRequestApiXO {
	this := ApiKeysReEncryptionRequestApiXO{}
	return &this
}

// GetAlgorithmForDecryption returns the AlgorithmForDecryption field value if set, zero value otherwise.
func (o *ApiKeysReEncryptionRequestApiXO) GetAlgorithmForDecryption() string {
	if o == nil || IsNil(o.AlgorithmForDecryption) {
		var ret string
		return ret
	}
	return *o.AlgorithmForDecryption
}

// GetAlgorithmForDecryptionOk returns a tuple with the AlgorithmForDecryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeysReEncryptionRequestApiXO) GetAlgorithmForDecryptionOk() (*string, bool) {
	if o == nil || IsNil(o.AlgorithmForDecryption) {
		return nil, false
	}
	return o.AlgorithmForDecryption, true
}

// HasAlgorithmForDecryption returns a boolean if a field has been set.
func (o *ApiKeysReEncryptionRequestApiXO) HasAlgorithmForDecryption() bool {
	if o != nil && !IsNil(o.AlgorithmForDecryption) {
		return true
	}

	return false
}

// SetAlgorithmForDecryption gets a reference to the given string and assigns it to the AlgorithmForDecryption field.
func (o *ApiKeysReEncryptionRequestApiXO) SetAlgorithmForDecryption(v string) {
	o.AlgorithmForDecryption = &v
}

// GetNotifyEmail returns the NotifyEmail field value if set, zero value otherwise.
func (o *ApiKeysReEncryptionRequestApiXO) GetNotifyEmail() string {
	if o == nil || IsNil(o.NotifyEmail) {
		var ret string
		return ret
	}
	return *o.NotifyEmail
}

// GetNotifyEmailOk returns a tuple with the NotifyEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeysReEncryptionRequestApiXO) GetNotifyEmailOk() (*string, bool) {
	if o == nil || IsNil(o.NotifyEmail) {
		return nil, false
	}
	return o.NotifyEmail, true
}

// HasNotifyEmail returns a boolean if a field has been set.
func (o *ApiKeysReEncryptionRequestApiXO) HasNotifyEmail() bool {
	if o != nil && !IsNil(o.NotifyEmail) {
		return true
	}

	return false
}

// SetNotifyEmail gets a reference to the given string and assigns it to the NotifyEmail field.
func (o *ApiKeysReEncryptionRequestApiXO) SetNotifyEmail(v string) {
	o.NotifyEmail = &v
}

func (o ApiKeysReEncryptionRequestApiXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeysReEncryptionRequestApiXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlgorithmForDecryption) {
		toSerialize["algorithmForDecryption"] = o.AlgorithmForDecryption
	}
	if !IsNil(o.NotifyEmail) {
		toSerialize["notifyEmail"] = o.NotifyEmail
	}
	return toSerialize, nil
}

type NullableApiKeysReEncryptionRequestApiXO struct {
	value *ApiKeysReEncryptionRequestApiXO
	isSet bool
}

func (v NullableApiKeysReEncryptionRequestApiXO) Get() *ApiKeysReEncryptionRequestApiXO {
	return v.value
}

func (v *NullableApiKeysReEncryptionRequestApiXO) Set(val *ApiKeysReEncryptionRequestApiXO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeysReEncryptionRequestApiXO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeysReEncryptionRequestApiXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeysReEncryptionRequestApiXO(val *ApiKeysReEncryptionRequestApiXO) *NullableApiKeysReEncryptionRequestApiXO {
	return &NullableApiKeysReEncryptionRequestApiXO{value: val, isSet: true}
}

func (v NullableApiKeysReEncryptionRequestApiXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeysReEncryptionRequestApiXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


