/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

API version: 3.85.0-03
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NpmAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpmAttributes{}

// NpmAttributes struct for NpmAttributes
type NpmAttributes struct {
	// Remove Quarantined Versions
	RemoveQuarantined bool `json:"removeQuarantined"`
}

type _NpmAttributes NpmAttributes

// NewNpmAttributes instantiates a new NpmAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpmAttributes(removeQuarantined bool) *NpmAttributes {
	this := NpmAttributes{}
	this.RemoveQuarantined = removeQuarantined
	return &this
}

// NewNpmAttributesWithDefaults instantiates a new NpmAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpmAttributesWithDefaults() *NpmAttributes {
	this := NpmAttributes{}
	return &this
}

// GetRemoveQuarantined returns the RemoveQuarantined field value
func (o *NpmAttributes) GetRemoveQuarantined() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RemoveQuarantined
}

// GetRemoveQuarantinedOk returns a tuple with the RemoveQuarantined field value
// and a boolean to check if the value has been set.
func (o *NpmAttributes) GetRemoveQuarantinedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoveQuarantined, true
}

// SetRemoveQuarantined sets field value
func (o *NpmAttributes) SetRemoveQuarantined(v bool) {
	o.RemoveQuarantined = v
}

func (o NpmAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpmAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["removeQuarantined"] = o.RemoveQuarantined
	return toSerialize, nil
}

func (o *NpmAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"removeQuarantined",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNpmAttributes := _NpmAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNpmAttributes)

	if err != nil {
		return err
	}

	*o = NpmAttributes(varNpmAttributes)

	return err
}

type NullableNpmAttributes struct {
	value *NpmAttributes
	isSet bool
}

func (v NullableNpmAttributes) Get() *NpmAttributes {
	return v.value
}

func (v *NullableNpmAttributes) Set(val *NpmAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableNpmAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableNpmAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpmAttributes(val *NpmAttributes) *NullableNpmAttributes {
	return &NullableNpmAttributes{value: val, isSet: true}
}

func (v NullableNpmAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpmAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


