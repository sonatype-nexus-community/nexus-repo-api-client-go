/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.82.0-08.

API version: 3.82.0-08
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GoogleCloudBlobStoreApiBucketConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleCloudBlobStoreApiBucketConfiguration{}

// GoogleCloudBlobStoreApiBucketConfiguration struct for GoogleCloudBlobStoreApiBucketConfiguration
type GoogleCloudBlobStoreApiBucketConfiguration struct {
	Bucket GoogleCloudBlobStoreApiBucket `json:"bucket"`
	BucketSecurity *GoogleCloudBlobStoreApiBucketAuthentication `json:"bucketSecurity,omitempty"`
	Encryption *GoogleCloudBlobStoreApiEncryption `json:"encryption,omitempty"`
}

type _GoogleCloudBlobStoreApiBucketConfiguration GoogleCloudBlobStoreApiBucketConfiguration

// NewGoogleCloudBlobStoreApiBucketConfiguration instantiates a new GoogleCloudBlobStoreApiBucketConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudBlobStoreApiBucketConfiguration(bucket GoogleCloudBlobStoreApiBucket) *GoogleCloudBlobStoreApiBucketConfiguration {
	this := GoogleCloudBlobStoreApiBucketConfiguration{}
	this.Bucket = bucket
	return &this
}

// NewGoogleCloudBlobStoreApiBucketConfigurationWithDefaults instantiates a new GoogleCloudBlobStoreApiBucketConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudBlobStoreApiBucketConfigurationWithDefaults() *GoogleCloudBlobStoreApiBucketConfiguration {
	this := GoogleCloudBlobStoreApiBucketConfiguration{}
	return &this
}

// GetBucket returns the Bucket field value
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetBucket() GoogleCloudBlobStoreApiBucket {
	if o == nil {
		var ret GoogleCloudBlobStoreApiBucket
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetBucketOk() (*GoogleCloudBlobStoreApiBucket, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *GoogleCloudBlobStoreApiBucketConfiguration) SetBucket(v GoogleCloudBlobStoreApiBucket) {
	o.Bucket = v
}

// GetBucketSecurity returns the BucketSecurity field value if set, zero value otherwise.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetBucketSecurity() GoogleCloudBlobStoreApiBucketAuthentication {
	if o == nil || IsNil(o.BucketSecurity) {
		var ret GoogleCloudBlobStoreApiBucketAuthentication
		return ret
	}
	return *o.BucketSecurity
}

// GetBucketSecurityOk returns a tuple with the BucketSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetBucketSecurityOk() (*GoogleCloudBlobStoreApiBucketAuthentication, bool) {
	if o == nil || IsNil(o.BucketSecurity) {
		return nil, false
	}
	return o.BucketSecurity, true
}

// HasBucketSecurity returns a boolean if a field has been set.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) HasBucketSecurity() bool {
	if o != nil && !IsNil(o.BucketSecurity) {
		return true
	}

	return false
}

// SetBucketSecurity gets a reference to the given GoogleCloudBlobStoreApiBucketAuthentication and assigns it to the BucketSecurity field.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) SetBucketSecurity(v GoogleCloudBlobStoreApiBucketAuthentication) {
	o.BucketSecurity = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetEncryption() GoogleCloudBlobStoreApiEncryption {
	if o == nil || IsNil(o.Encryption) {
		var ret GoogleCloudBlobStoreApiEncryption
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) GetEncryptionOk() (*GoogleCloudBlobStoreApiEncryption, bool) {
	if o == nil || IsNil(o.Encryption) {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) HasEncryption() bool {
	if o != nil && !IsNil(o.Encryption) {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given GoogleCloudBlobStoreApiEncryption and assigns it to the Encryption field.
func (o *GoogleCloudBlobStoreApiBucketConfiguration) SetEncryption(v GoogleCloudBlobStoreApiEncryption) {
	o.Encryption = &v
}

func (o GoogleCloudBlobStoreApiBucketConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleCloudBlobStoreApiBucketConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucket"] = o.Bucket
	if !IsNil(o.BucketSecurity) {
		toSerialize["bucketSecurity"] = o.BucketSecurity
	}
	if !IsNil(o.Encryption) {
		toSerialize["encryption"] = o.Encryption
	}
	return toSerialize, nil
}

func (o *GoogleCloudBlobStoreApiBucketConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoogleCloudBlobStoreApiBucketConfiguration := _GoogleCloudBlobStoreApiBucketConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoogleCloudBlobStoreApiBucketConfiguration)

	if err != nil {
		return err
	}

	*o = GoogleCloudBlobStoreApiBucketConfiguration(varGoogleCloudBlobStoreApiBucketConfiguration)

	return err
}

type NullableGoogleCloudBlobStoreApiBucketConfiguration struct {
	value *GoogleCloudBlobStoreApiBucketConfiguration
	isSet bool
}

func (v NullableGoogleCloudBlobStoreApiBucketConfiguration) Get() *GoogleCloudBlobStoreApiBucketConfiguration {
	return v.value
}

func (v *NullableGoogleCloudBlobStoreApiBucketConfiguration) Set(val *GoogleCloudBlobStoreApiBucketConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudBlobStoreApiBucketConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudBlobStoreApiBucketConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudBlobStoreApiBucketConfiguration(val *GoogleCloudBlobStoreApiBucketConfiguration) *NullableGoogleCloudBlobStoreApiBucketConfiguration {
	return &NullableGoogleCloudBlobStoreApiBucketConfiguration{value: val, isSet: true}
}

func (v NullableGoogleCloudBlobStoreApiBucketConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudBlobStoreApiBucketConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


