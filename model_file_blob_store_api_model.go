/*
Nexus Repository Manager REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.67.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
)

// checks if the FileBlobStoreApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileBlobStoreApiModel{}

// FileBlobStoreApiModel struct for FileBlobStoreApiModel
type FileBlobStoreApiModel struct {
	// The path to the blobstore contents. This can be an absolute path to anywhere on the system Nexus Repository Manager has access to or it can be a path relative to the sonatype-work directory.
	Path *string `json:"path,omitempty"`
	SoftQuota *BlobStoreApiSoftQuota `json:"softQuota,omitempty"`
}

// NewFileBlobStoreApiModel instantiates a new FileBlobStoreApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileBlobStoreApiModel() *FileBlobStoreApiModel {
	this := FileBlobStoreApiModel{}
	return &this
}

// NewFileBlobStoreApiModelWithDefaults instantiates a new FileBlobStoreApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileBlobStoreApiModelWithDefaults() *FileBlobStoreApiModel {
	this := FileBlobStoreApiModel{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *FileBlobStoreApiModel) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileBlobStoreApiModel) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *FileBlobStoreApiModel) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *FileBlobStoreApiModel) SetPath(v string) {
	o.Path = &v
}

// GetSoftQuota returns the SoftQuota field value if set, zero value otherwise.
func (o *FileBlobStoreApiModel) GetSoftQuota() BlobStoreApiSoftQuota {
	if o == nil || IsNil(o.SoftQuota) {
		var ret BlobStoreApiSoftQuota
		return ret
	}
	return *o.SoftQuota
}

// GetSoftQuotaOk returns a tuple with the SoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileBlobStoreApiModel) GetSoftQuotaOk() (*BlobStoreApiSoftQuota, bool) {
	if o == nil || IsNil(o.SoftQuota) {
		return nil, false
	}
	return o.SoftQuota, true
}

// HasSoftQuota returns a boolean if a field has been set.
func (o *FileBlobStoreApiModel) HasSoftQuota() bool {
	if o != nil && !IsNil(o.SoftQuota) {
		return true
	}

	return false
}

// SetSoftQuota gets a reference to the given BlobStoreApiSoftQuota and assigns it to the SoftQuota field.
func (o *FileBlobStoreApiModel) SetSoftQuota(v BlobStoreApiSoftQuota) {
	o.SoftQuota = &v
}

func (o FileBlobStoreApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileBlobStoreApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.SoftQuota) {
		toSerialize["softQuota"] = o.SoftQuota
	}
	return toSerialize, nil
}

type NullableFileBlobStoreApiModel struct {
	value *FileBlobStoreApiModel
	isSet bool
}

func (v NullableFileBlobStoreApiModel) Get() *FileBlobStoreApiModel {
	return v.value
}

func (v *NullableFileBlobStoreApiModel) Set(val *FileBlobStoreApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFileBlobStoreApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFileBlobStoreApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileBlobStoreApiModel(val *FileBlobStoreApiModel) *NullableFileBlobStoreApiModel {
	return &NullableFileBlobStoreApiModel{value: val, isSet: true}
}

func (v NullableFileBlobStoreApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileBlobStoreApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


