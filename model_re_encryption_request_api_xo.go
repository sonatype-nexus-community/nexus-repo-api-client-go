/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.81.1-01.

API version: 3.81.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ReEncryptionRequestApiXO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReEncryptionRequestApiXO{}

// ReEncryptionRequestApiXO struct for ReEncryptionRequestApiXO
type ReEncryptionRequestApiXO struct {
	// Optional - Email to notify when task finishes
	NotifyEmail *string `json:"notifyEmail,omitempty"`
	// Key identifier that will be used to re-encrypt secrets
	SecretKeyId *string `json:"secretKeyId,omitempty"`
}

// NewReEncryptionRequestApiXO instantiates a new ReEncryptionRequestApiXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReEncryptionRequestApiXO() *ReEncryptionRequestApiXO {
	this := ReEncryptionRequestApiXO{}
	return &this
}

// NewReEncryptionRequestApiXOWithDefaults instantiates a new ReEncryptionRequestApiXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReEncryptionRequestApiXOWithDefaults() *ReEncryptionRequestApiXO {
	this := ReEncryptionRequestApiXO{}
	return &this
}

// GetNotifyEmail returns the NotifyEmail field value if set, zero value otherwise.
func (o *ReEncryptionRequestApiXO) GetNotifyEmail() string {
	if o == nil || IsNil(o.NotifyEmail) {
		var ret string
		return ret
	}
	return *o.NotifyEmail
}

// GetNotifyEmailOk returns a tuple with the NotifyEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReEncryptionRequestApiXO) GetNotifyEmailOk() (*string, bool) {
	if o == nil || IsNil(o.NotifyEmail) {
		return nil, false
	}
	return o.NotifyEmail, true
}

// HasNotifyEmail returns a boolean if a field has been set.
func (o *ReEncryptionRequestApiXO) HasNotifyEmail() bool {
	if o != nil && !IsNil(o.NotifyEmail) {
		return true
	}

	return false
}

// SetNotifyEmail gets a reference to the given string and assigns it to the NotifyEmail field.
func (o *ReEncryptionRequestApiXO) SetNotifyEmail(v string) {
	o.NotifyEmail = &v
}

// GetSecretKeyId returns the SecretKeyId field value if set, zero value otherwise.
func (o *ReEncryptionRequestApiXO) GetSecretKeyId() string {
	if o == nil || IsNil(o.SecretKeyId) {
		var ret string
		return ret
	}
	return *o.SecretKeyId
}

// GetSecretKeyIdOk returns a tuple with the SecretKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReEncryptionRequestApiXO) GetSecretKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKeyId) {
		return nil, false
	}
	return o.SecretKeyId, true
}

// HasSecretKeyId returns a boolean if a field has been set.
func (o *ReEncryptionRequestApiXO) HasSecretKeyId() bool {
	if o != nil && !IsNil(o.SecretKeyId) {
		return true
	}

	return false
}

// SetSecretKeyId gets a reference to the given string and assigns it to the SecretKeyId field.
func (o *ReEncryptionRequestApiXO) SetSecretKeyId(v string) {
	o.SecretKeyId = &v
}

func (o ReEncryptionRequestApiXO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReEncryptionRequestApiXO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotifyEmail) {
		toSerialize["notifyEmail"] = o.NotifyEmail
	}
	if !IsNil(o.SecretKeyId) {
		toSerialize["secretKeyId"] = o.SecretKeyId
	}
	return toSerialize, nil
}

type NullableReEncryptionRequestApiXO struct {
	value *ReEncryptionRequestApiXO
	isSet bool
}

func (v NullableReEncryptionRequestApiXO) Get() *ReEncryptionRequestApiXO {
	return v.value
}

func (v *NullableReEncryptionRequestApiXO) Set(val *ReEncryptionRequestApiXO) {
	v.value = val
	v.isSet = true
}

func (v NullableReEncryptionRequestApiXO) IsSet() bool {
	return v.isSet
}

func (v *NullableReEncryptionRequestApiXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReEncryptionRequestApiXO(val *ReEncryptionRequestApiXO) *NullableReEncryptionRequestApiXO {
	return &NullableReEncryptionRequestApiXO{value: val, isSet: true}
}

func (v NullableReEncryptionRequestApiXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReEncryptionRequestApiXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


