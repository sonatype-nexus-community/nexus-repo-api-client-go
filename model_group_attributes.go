/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.67.1-01.

API version: 3.67.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
)

// checks if the GroupAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupAttributes{}

// GroupAttributes struct for GroupAttributes
type GroupAttributes struct {
	// Member repositories' names
	MemberNames []string `json:"memberNames,omitempty"`
}

// NewGroupAttributes instantiates a new GroupAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupAttributes() *GroupAttributes {
	this := GroupAttributes{}
	return &this
}

// NewGroupAttributesWithDefaults instantiates a new GroupAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupAttributesWithDefaults() *GroupAttributes {
	this := GroupAttributes{}
	return &this
}

// GetMemberNames returns the MemberNames field value if set, zero value otherwise.
func (o *GroupAttributes) GetMemberNames() []string {
	if o == nil || IsNil(o.MemberNames) {
		var ret []string
		return ret
	}
	return o.MemberNames
}

// GetMemberNamesOk returns a tuple with the MemberNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupAttributes) GetMemberNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.MemberNames) {
		return nil, false
	}
	return o.MemberNames, true
}

// HasMemberNames returns a boolean if a field has been set.
func (o *GroupAttributes) HasMemberNames() bool {
	if o != nil && !IsNil(o.MemberNames) {
		return true
	}

	return false
}

// SetMemberNames gets a reference to the given []string and assigns it to the MemberNames field.
func (o *GroupAttributes) SetMemberNames(v []string) {
	o.MemberNames = v
}

func (o GroupAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MemberNames) {
		toSerialize["memberNames"] = o.MemberNames
	}
	return toSerialize, nil
}

type NullableGroupAttributes struct {
	value *GroupAttributes
	isSet bool
}

func (v NullableGroupAttributes) Get() *GroupAttributes {
	return v.value
}

func (v *NullableGroupAttributes) Set(val *GroupAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupAttributes(val *GroupAttributes) *NullableGroupAttributes {
	return &NullableGroupAttributes{value: val, isSet: true}
}

func (v NullableGroupAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


