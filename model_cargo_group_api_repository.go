/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.81.1-01.

API version: 3.81.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CargoGroupApiRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CargoGroupApiRepository{}

// CargoGroupApiRepository struct for CargoGroupApiRepository
type CargoGroupApiRepository struct {
	Cargo *CargoAttributes `json:"cargo,omitempty"`
	Group GroupDeployAttributes `json:"group"`
	// A unique identifier for this repository
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-]{1}[a-zA-Z0-9_\\\\-\\\\.]*$"`
	// Whether this repository accepts incoming requests
	Online bool `json:"online"`
	Storage StorageAttributes `json:"storage"`
}

type _CargoGroupApiRepository CargoGroupApiRepository

// NewCargoGroupApiRepository instantiates a new CargoGroupApiRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCargoGroupApiRepository(group GroupDeployAttributes, online bool, storage StorageAttributes) *CargoGroupApiRepository {
	this := CargoGroupApiRepository{}
	this.Group = group
	this.Online = online
	this.Storage = storage
	return &this
}

// NewCargoGroupApiRepositoryWithDefaults instantiates a new CargoGroupApiRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCargoGroupApiRepositoryWithDefaults() *CargoGroupApiRepository {
	this := CargoGroupApiRepository{}
	return &this
}

// GetCargo returns the Cargo field value if set, zero value otherwise.
func (o *CargoGroupApiRepository) GetCargo() CargoAttributes {
	if o == nil || IsNil(o.Cargo) {
		var ret CargoAttributes
		return ret
	}
	return *o.Cargo
}

// GetCargoOk returns a tuple with the Cargo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CargoGroupApiRepository) GetCargoOk() (*CargoAttributes, bool) {
	if o == nil || IsNil(o.Cargo) {
		return nil, false
	}
	return o.Cargo, true
}

// HasCargo returns a boolean if a field has been set.
func (o *CargoGroupApiRepository) HasCargo() bool {
	if o != nil && !IsNil(o.Cargo) {
		return true
	}

	return false
}

// SetCargo gets a reference to the given CargoAttributes and assigns it to the Cargo field.
func (o *CargoGroupApiRepository) SetCargo(v CargoAttributes) {
	o.Cargo = &v
}

// GetGroup returns the Group field value
func (o *CargoGroupApiRepository) GetGroup() GroupDeployAttributes {
	if o == nil {
		var ret GroupDeployAttributes
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *CargoGroupApiRepository) GetGroupOk() (*GroupDeployAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *CargoGroupApiRepository) SetGroup(v GroupDeployAttributes) {
	o.Group = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CargoGroupApiRepository) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CargoGroupApiRepository) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CargoGroupApiRepository) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CargoGroupApiRepository) SetName(v string) {
	o.Name = &v
}

// GetOnline returns the Online field value
func (o *CargoGroupApiRepository) GetOnline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Online
}

// GetOnlineOk returns a tuple with the Online field value
// and a boolean to check if the value has been set.
func (o *CargoGroupApiRepository) GetOnlineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Online, true
}

// SetOnline sets field value
func (o *CargoGroupApiRepository) SetOnline(v bool) {
	o.Online = v
}

// GetStorage returns the Storage field value
func (o *CargoGroupApiRepository) GetStorage() StorageAttributes {
	if o == nil {
		var ret StorageAttributes
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *CargoGroupApiRepository) GetStorageOk() (*StorageAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *CargoGroupApiRepository) SetStorage(v StorageAttributes) {
	o.Storage = v
}

func (o CargoGroupApiRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CargoGroupApiRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cargo) {
		toSerialize["cargo"] = o.Cargo
	}
	toSerialize["group"] = o.Group
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["online"] = o.Online
	toSerialize["storage"] = o.Storage
	return toSerialize, nil
}

func (o *CargoGroupApiRepository) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"group",
		"online",
		"storage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCargoGroupApiRepository := _CargoGroupApiRepository{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCargoGroupApiRepository)

	if err != nil {
		return err
	}

	*o = CargoGroupApiRepository(varCargoGroupApiRepository)

	return err
}

type NullableCargoGroupApiRepository struct {
	value *CargoGroupApiRepository
	isSet bool
}

func (v NullableCargoGroupApiRepository) Get() *CargoGroupApiRepository {
	return v.value
}

func (v *NullableCargoGroupApiRepository) Set(val *CargoGroupApiRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableCargoGroupApiRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableCargoGroupApiRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCargoGroupApiRepository(val *CargoGroupApiRepository) *NullableCargoGroupApiRepository {
	return &NullableCargoGroupApiRepository{value: val, isSet: true}
}

func (v NullableCargoGroupApiRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCargoGroupApiRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


