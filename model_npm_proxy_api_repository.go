/*
Sonatype Nexus Repository Manager

This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.81.1-01.

API version: 3.81.1-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatyperepo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NpmProxyApiRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpmProxyApiRepository{}

// NpmProxyApiRepository struct for NpmProxyApiRepository
type NpmProxyApiRepository struct {
	Cleanup *CleanupPolicyAttributes `json:"cleanup,omitempty"`
	HttpClient HttpClientAttributes `json:"httpClient"`
	// A unique identifier for this repository
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-]{1}[a-zA-Z0-9_\\\\-\\\\.]*$"`
	NegativeCache NegativeCacheAttributes `json:"negativeCache"`
	Npm *NpmAttributes `json:"npm,omitempty"`
	// Whether this repository accepts incoming requests
	Online bool `json:"online"`
	Proxy ProxyAttributes `json:"proxy"`
	Replication *ReplicationAttributes `json:"replication,omitempty"`
	// The name of the routing rule assigned to this repository
	RoutingRuleName *string `json:"routingRuleName,omitempty"`
	Storage StorageAttributes `json:"storage"`
}

type _NpmProxyApiRepository NpmProxyApiRepository

// NewNpmProxyApiRepository instantiates a new NpmProxyApiRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpmProxyApiRepository(httpClient HttpClientAttributes, negativeCache NegativeCacheAttributes, online bool, proxy ProxyAttributes, storage StorageAttributes) *NpmProxyApiRepository {
	this := NpmProxyApiRepository{}
	this.HttpClient = httpClient
	this.NegativeCache = negativeCache
	this.Online = online
	this.Proxy = proxy
	this.Storage = storage
	return &this
}

// NewNpmProxyApiRepositoryWithDefaults instantiates a new NpmProxyApiRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpmProxyApiRepositoryWithDefaults() *NpmProxyApiRepository {
	this := NpmProxyApiRepository{}
	return &this
}

// GetCleanup returns the Cleanup field value if set, zero value otherwise.
func (o *NpmProxyApiRepository) GetCleanup() CleanupPolicyAttributes {
	if o == nil || IsNil(o.Cleanup) {
		var ret CleanupPolicyAttributes
		return ret
	}
	return *o.Cleanup
}

// GetCleanupOk returns a tuple with the Cleanup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetCleanupOk() (*CleanupPolicyAttributes, bool) {
	if o == nil || IsNil(o.Cleanup) {
		return nil, false
	}
	return o.Cleanup, true
}

// HasCleanup returns a boolean if a field has been set.
func (o *NpmProxyApiRepository) HasCleanup() bool {
	if o != nil && !IsNil(o.Cleanup) {
		return true
	}

	return false
}

// SetCleanup gets a reference to the given CleanupPolicyAttributes and assigns it to the Cleanup field.
func (o *NpmProxyApiRepository) SetCleanup(v CleanupPolicyAttributes) {
	o.Cleanup = &v
}

// GetHttpClient returns the HttpClient field value
func (o *NpmProxyApiRepository) GetHttpClient() HttpClientAttributes {
	if o == nil {
		var ret HttpClientAttributes
		return ret
	}

	return o.HttpClient
}

// GetHttpClientOk returns a tuple with the HttpClient field value
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetHttpClientOk() (*HttpClientAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpClient, true
}

// SetHttpClient sets field value
func (o *NpmProxyApiRepository) SetHttpClient(v HttpClientAttributes) {
	o.HttpClient = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NpmProxyApiRepository) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NpmProxyApiRepository) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NpmProxyApiRepository) SetName(v string) {
	o.Name = &v
}

// GetNegativeCache returns the NegativeCache field value
func (o *NpmProxyApiRepository) GetNegativeCache() NegativeCacheAttributes {
	if o == nil {
		var ret NegativeCacheAttributes
		return ret
	}

	return o.NegativeCache
}

// GetNegativeCacheOk returns a tuple with the NegativeCache field value
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetNegativeCacheOk() (*NegativeCacheAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NegativeCache, true
}

// SetNegativeCache sets field value
func (o *NpmProxyApiRepository) SetNegativeCache(v NegativeCacheAttributes) {
	o.NegativeCache = v
}

// GetNpm returns the Npm field value if set, zero value otherwise.
func (o *NpmProxyApiRepository) GetNpm() NpmAttributes {
	if o == nil || IsNil(o.Npm) {
		var ret NpmAttributes
		return ret
	}
	return *o.Npm
}

// GetNpmOk returns a tuple with the Npm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetNpmOk() (*NpmAttributes, bool) {
	if o == nil || IsNil(o.Npm) {
		return nil, false
	}
	return o.Npm, true
}

// HasNpm returns a boolean if a field has been set.
func (o *NpmProxyApiRepository) HasNpm() bool {
	if o != nil && !IsNil(o.Npm) {
		return true
	}

	return false
}

// SetNpm gets a reference to the given NpmAttributes and assigns it to the Npm field.
func (o *NpmProxyApiRepository) SetNpm(v NpmAttributes) {
	o.Npm = &v
}

// GetOnline returns the Online field value
func (o *NpmProxyApiRepository) GetOnline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Online
}

// GetOnlineOk returns a tuple with the Online field value
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetOnlineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Online, true
}

// SetOnline sets field value
func (o *NpmProxyApiRepository) SetOnline(v bool) {
	o.Online = v
}

// GetProxy returns the Proxy field value
func (o *NpmProxyApiRepository) GetProxy() ProxyAttributes {
	if o == nil {
		var ret ProxyAttributes
		return ret
	}

	return o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetProxyOk() (*ProxyAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Proxy, true
}

// SetProxy sets field value
func (o *NpmProxyApiRepository) SetProxy(v ProxyAttributes) {
	o.Proxy = v
}

// GetReplication returns the Replication field value if set, zero value otherwise.
func (o *NpmProxyApiRepository) GetReplication() ReplicationAttributes {
	if o == nil || IsNil(o.Replication) {
		var ret ReplicationAttributes
		return ret
	}
	return *o.Replication
}

// GetReplicationOk returns a tuple with the Replication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetReplicationOk() (*ReplicationAttributes, bool) {
	if o == nil || IsNil(o.Replication) {
		return nil, false
	}
	return o.Replication, true
}

// HasReplication returns a boolean if a field has been set.
func (o *NpmProxyApiRepository) HasReplication() bool {
	if o != nil && !IsNil(o.Replication) {
		return true
	}

	return false
}

// SetReplication gets a reference to the given ReplicationAttributes and assigns it to the Replication field.
func (o *NpmProxyApiRepository) SetReplication(v ReplicationAttributes) {
	o.Replication = &v
}

// GetRoutingRuleName returns the RoutingRuleName field value if set, zero value otherwise.
func (o *NpmProxyApiRepository) GetRoutingRuleName() string {
	if o == nil || IsNil(o.RoutingRuleName) {
		var ret string
		return ret
	}
	return *o.RoutingRuleName
}

// GetRoutingRuleNameOk returns a tuple with the RoutingRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetRoutingRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingRuleName) {
		return nil, false
	}
	return o.RoutingRuleName, true
}

// HasRoutingRuleName returns a boolean if a field has been set.
func (o *NpmProxyApiRepository) HasRoutingRuleName() bool {
	if o != nil && !IsNil(o.RoutingRuleName) {
		return true
	}

	return false
}

// SetRoutingRuleName gets a reference to the given string and assigns it to the RoutingRuleName field.
func (o *NpmProxyApiRepository) SetRoutingRuleName(v string) {
	o.RoutingRuleName = &v
}

// GetStorage returns the Storage field value
func (o *NpmProxyApiRepository) GetStorage() StorageAttributes {
	if o == nil {
		var ret StorageAttributes
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *NpmProxyApiRepository) GetStorageOk() (*StorageAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *NpmProxyApiRepository) SetStorage(v StorageAttributes) {
	o.Storage = v
}

func (o NpmProxyApiRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpmProxyApiRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cleanup) {
		toSerialize["cleanup"] = o.Cleanup
	}
	toSerialize["httpClient"] = o.HttpClient
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["negativeCache"] = o.NegativeCache
	if !IsNil(o.Npm) {
		toSerialize["npm"] = o.Npm
	}
	toSerialize["online"] = o.Online
	toSerialize["proxy"] = o.Proxy
	if !IsNil(o.Replication) {
		toSerialize["replication"] = o.Replication
	}
	if !IsNil(o.RoutingRuleName) {
		toSerialize["routingRuleName"] = o.RoutingRuleName
	}
	toSerialize["storage"] = o.Storage
	return toSerialize, nil
}

func (o *NpmProxyApiRepository) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"httpClient",
		"negativeCache",
		"online",
		"proxy",
		"storage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNpmProxyApiRepository := _NpmProxyApiRepository{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNpmProxyApiRepository)

	if err != nil {
		return err
	}

	*o = NpmProxyApiRepository(varNpmProxyApiRepository)

	return err
}

type NullableNpmProxyApiRepository struct {
	value *NpmProxyApiRepository
	isSet bool
}

func (v NullableNpmProxyApiRepository) Get() *NpmProxyApiRepository {
	return v.value
}

func (v *NullableNpmProxyApiRepository) Set(val *NpmProxyApiRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableNpmProxyApiRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableNpmProxyApiRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpmProxyApiRepository(val *NpmProxyApiRepository) *NullableNpmProxyApiRepository {
	return &NullableNpmProxyApiRepository{value: val, isSet: true}
}

func (v NullableNpmProxyApiRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpmProxyApiRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


